<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="collection_of_sql_statements">
    <select id="Searchlist_all" resultType="com.solponge.domain.product.productVo">
        SELECT * FROM PRODUCT WHERE product_title LIKE '%' || #{SearchValue} || '%' OR product_writer LIKE '%' || #{SearchValue} || '%' AND (product_garbage = 1)
    </select>
    <select id="Searchlist_product_title" resultType="com.solponge.domain.product.productVo">
        SELECT * FROM PRODUCT WHERE product_title LIKE '%' || #{SearchValue} || '%'  AND (product_garbage = 1)
    </select>
    <select id="Searchlist_product_writer" resultType="com.solponge.domain.product.productVo">
        SELECT * FROM PRODUCT WHERE product_writer LIKE '%' || #{SearchValue} || '%'  AND (product_garbage = 1)
    </select>
    <select id="list" resultType="com.solponge.domain.product.productVo">
        SELECT * FROM product WHERE product_garbage = 1 ORDER BY product_num ASC
    </select>
    <select id="list_new_8" resultType="com.solponge.domain.product.productVo">
        <![CDATA[
        SELECT *
        FROM (
                 SELECT DISTINCT product_num, product_title, product_subtitle, product_writer, product_price, product_img, product_date
                 FROM product WHERE product_garbage = 1
                 ORDER BY product_date DESC
             )
        WHERE ROWNUM <= 8
        ]]>
    </select>
    <select id="list_popular_6" resultType="com.solponge.domain.product.productVo">
        <![CDATA[
        SELECT *
        FROM (
                 SELECT DISTINCT product_num, product_title, product_writer, product_img, PRODUCT_SALE
                 FROM product WHERE product_garbage = 1
                 ORDER BY PRODUCT_SALE DESC
             )
        WHERE ROWNUM <= 6
        ]]>
    </select>
    <select id="product" resultType="com.solponge.domain.product.productVo">
        select * from product where product_garbage = 1 AND product_num=#{product_num}
    </select>
    <insert id="insertpro" useGeneratedKeys="true" keyProperty="PRODUCT_NUM_num" keyColumn="PRODUCT_NUM">
        insert into PRODUCT(PRODUCT_NUM, PRODUCT_TITLE, PRODUCT_SUBTITLE, PRODUCT_WRITER, PRODUCT_PRICE, PRODUCT_IMG, PRODUCT_DATE, PRODUCT_PAGE, PRODUCT_STOCK, PRODUCT_CODE)
        values(PRODUCT_SEQ.NEXTVAL, #{TITLE}, #{SUB}, #{WRITER}, #{PRICE}, #{IMG}, #{DATE}, #{PAGE}, #{STOCK}, #{CODE})
    </insert>
    <!--    <delete id="deletepro">-->
    <!--        DELETE PRODUCT WHERE PRODUCT_NUM=#{NUM}-->
    <!--    </delete>-->
    <update id="deletepro">
        update PRODUCT set product_garbage=0 where PRODUCT_NUM=#{NUM}
    </update>

    <update id="updatepro">
        update PRODUCT set PRODUCT_TITLE=#{TITLE}, PRODUCT_SUBTITLE=#{SUB}, PRODUCT_WRITER=#{WRITER}, PRODUCT_PRICE=#{PRICE}, PRODUCT_IMG=#{IMG},PRODUCT_DATE=#{DATE}, PRODUCT_PAGE=#{PAGE}, PRODUCT_STOCK=#{STOCK}, PRODUCT_SALE=#{SALE}, PRODUCT_VISIT=#{VISIT} where PRODUCT_NUM=#{NUM}
    </update>
    <update id="updateProductCode">
        UPDATE product
        SET product_code = #{CODE, jdbcType=CLOB}
        WHERE product_num = #{NUM, jdbcType=INTEGER}
    </update>

    <update id="updateProductSale">
        UPDATE product
        SET PRODUCT_SALE=(SELECT PRODUCT_SALE FROM product WHERE product_num=#{product_num})+#{payment_stock}
        WHERE product_num =#{product_num}
    </update>
</mapper>